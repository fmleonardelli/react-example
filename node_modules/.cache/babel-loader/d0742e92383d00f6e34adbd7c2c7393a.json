{"ast":null,"code":"import _slicedToArray from \"/home/facundoleonardelli/workspace_test/react_test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/facundoleonardelli/workspace_test/react_test/src/components/game/Game.js\";\nimport React from 'react';\nimport Board from '../board/Board';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, moves)));\n  }\n\n  buildMatrix() {\n    return [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    alert(squares);\n\n    if (this.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  calculateWinner(squares) {\n    const lines = this.buildMatrix;\n\n    for (let i = 0; i < lines.length; i++) {\n      const _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/facundoleonardelli/workspace_test/react_test/src/components/game/Game.js"],"names":["React","Board","Game","Component","constructor","props","state","history","squares","Array","fill","xIsNext","stepNumber","render","current","winner","calculateWinner","moves","map","step","move","desc","jumpTo","status","i","handleClick","buildMatrix","slice","length","alert","setState","concat","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from '../board/Board';\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          history: [{\n            squares: Array(9).fill(null)\n          }],\n          xIsNext: true,\n          stepNumber: 0\n        };\n      }\n\n      render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ? 'Go to move #' + move : 'Go to game start';\n            return (\n              <li key={move}>\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\n              </li>\n            );\n          });\n    \n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n    \n        return (\n          <div className=\"game\">\n            <div className=\"game-board\">\n              <Board\n                squares={current.squares}\n                onClick={(i) => this.handleClick(i)}\n              />\n            </div>\n            <div className=\"game-info\">\n              <div>{ status }</div>\n              <ol>{ moves }</ol>\n            </div>\n          </div>\n        );\n      }\n\n      buildMatrix() {\n        return ([\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n          ]);\n      }\n    \n      handleClick(i) {          \n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        alert(squares);\n        if (this.calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          history: history.concat([{\n            squares: squares\n          }]),\n          xIsNext: !this.state.xIsNext,\n          stepNumber: history.length\n        });\n      }\n\n      jumpTo(step) {\n        this.setState({\n          stepNumber: step,\n          xIsNext: (step % 2) === 0,\n        });\n      }\n      \n      calculateWinner(squares) {\n        const lines = this.buildMatrix; \n        for (let i = 0; i < lines.length; i++) {\n          const [a, b, c] = lines[i];\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n          }\n        }\n        return null;\n      }\n  }\n\n  export default Game;"]},"metadata":{},"sourceType":"module"}